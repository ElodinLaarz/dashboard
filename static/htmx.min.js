// Minimal htmx implementation for this project
(function(){
  'use strict';
  
  var htmx = {
    process: function(element) {
      var elts = element.querySelectorAll('[hx-get]:not([data-htmx-processed])');
      elts.forEach(function(elt) {
        // Mark element as processed to prevent duplicate listeners
        elt.setAttribute('data-htmx-processed', 'true');
        
        var triggerAttr = elt.getAttribute('hx-trigger') || 'click';
        var url = elt.getAttribute('hx-get');
        var target = elt.getAttribute('hx-target');
        var swapAttr = elt.getAttribute('hx-swap') || 'innerHTML';
        
        // Parse trigger: extract event name and modifiers
        var triggerParts = triggerAttr.split(' ');
        var eventName = triggerParts[0];
        var throttleMs = 0;
        
        // Check for throttle modifier
        for (var i = 1; i < triggerParts.length; i++) {
          if (triggerParts[i].startsWith('throttle:')) {
            throttleMs = parseInt(triggerParts[i].split(':')[1]);
          }
        }
        
        // Parse swap: extract swap type
        var swapType = swapAttr.split(' ')[0];
        
        var lastTrigger = 0;
        elt.addEventListener(eventName, function(e) {
          var now = Date.now();
          if (throttleMs > 0 && (now - lastTrigger) < throttleMs) {
            return;
          }
          lastTrigger = now;
          
          fetch(url)
            .then(function(response) { return response.text(); })
            .then(function(html) {
              var targetElt = target ? document.querySelector(target) : elt;
              if (targetElt) {
                if (swapType === 'innerHTML') {
                  targetElt.innerHTML = html;
                  htmx.process(targetElt);
                } else if (swapType === 'outerHTML') {
                  targetElt.outerHTML = html;
                }
              }
            });
        });
      });
    }
  };
  
  document.addEventListener('DOMContentLoaded', function() {
    htmx.process(document.body);
  });
  
  window.htmx = htmx;
})();
